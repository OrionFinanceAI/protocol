name: "CI"

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  setup:
    name: "Setup Environment"
    runs-on: ubuntu-latest

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Install Pnpm"
        uses: pnpm/action-setup@v2
        with:
          version: "8"

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: lts/*

      - name: "Install dependencies"
        run: pnpm install

  build:
    name: "Build Contracts and Generate Bindings"
    runs-on: "ubuntu-latest"
    needs: setup

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Build and typechain"
        id: build
        run: pnpm typechain
        env:
          RPC_URL: ${{ secrets.RPC_URL }}
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
          LP_PRIVATE_KEY: ${{ secrets.LP_PRIVATE_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

  lint:
    name: "Lint Code"
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Install dependencies"
        run: pnpm install

      - name: "Lint"
        run: pnpm lint

      - name: "Add lint summary"
        run: |
          echo "## Lint results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test:
    name: "Test Contracts and Generate Coverage Report"
    runs-on: "ubuntu-latest"
    needs: build

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Install dependencies"
        run: pnpm install

      - name: "Run tests and generate coverage report"
        run: pnpm coverage
        env:
          RPC_URL: ${{ secrets.RPC_URL }}
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
          LP_PRIVATE_KEY: ${{ secrets.LP_PRIVATE_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true

      - name: "Add test summary"
        run: |
          echo "## Test results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  slither:
    name: "Slither Static Analysis"
    runs-on: "ubuntu-latest"
    needs: build

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: recursive

      - name: "Run Slither"
        uses: "crytic/slither-action@v0.4.1"
        with:
          slither-args: "--filter-paths 'lib|node_modules|dependencies|contracts/mocks'"
          fail-on: low
