/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniverseERC4626Whitelist,
  UniverseERC4626WhitelistInterface,
} from "../../../contracts/ERC4626Whitelist.sol/UniverseERC4626Whitelist";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "addVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "removeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610797806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063256b5a021461005c5780633af32abf146100785780638da5cb5b146100a8578063c23697a8146100c6578063ceb68c23146100f6575b600080fd5b6100766004803603810190610071919061057f565b610112565b005b610092600480360381019061008d919061057f565b6102ca565b60405161009f91906105c7565b60405180910390f35b6100b06102ea565b6040516100bd91906105f1565b60405180910390f35b6100e060048036038101906100db919061057f565b61030e565b6040516100ed91906105c7565b60405180910390f35b610110600480360381019061010b919061057f565b610364565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019790610669565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561022d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610224906106d5565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f7b7ef7a864d96a85497a1ed846adb39940dd6ccef678ff6ac8d55505e09b8cc460405160405180910390a250565b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610669565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047590610741565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe71f3a50e5ad81964f352c411f1d45e35438ecd1acecef59ac81d9fbbf6cbc0a60405160405180910390a250565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054c82610521565b9050919050565b61055c81610541565b811461056757600080fd5b50565b60008135905061057981610553565b92915050565b6000602082840312156105955761059461051c565b5b60006105a38482850161056a565b91505092915050565b60008115159050919050565b6105c1816105ac565b82525050565b60006020820190506105dc60008301846105b8565b92915050565b6105eb81610541565b82525050565b600060208201905061060660008301846105e2565b92915050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b600061065360098361060c565b915061065e8261061d565b602082019050919050565b6000602082019050818103600083015261068281610646565b9050919050565b7f416c72656164792077686974656c697374656400000000000000000000000000600082015250565b60006106bf60138361060c565b91506106ca82610689565b602082019050919050565b600060208201905081810360008301526106ee816106b2565b9050919050565b7f4e6f7420696e2077686974656c69737400000000000000000000000000000000600082015250565b600061072b60108361060c565b9150610736826106f5565b602082019050919050565b6000602082019050818103600083015261075a8161071e565b905091905056fea26469706673582212201217259d74d934fa88f00db07525e7848e5fe74fe89f810ee6a275f7d43381b364736f6c63430008180033";

type UniverseERC4626WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniverseERC4626WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniverseERC4626Whitelist__factory extends ContractFactory {
  constructor(...args: UniverseERC4626WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniverseERC4626Whitelist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniverseERC4626Whitelist__factory {
    return super.connect(runner) as UniverseERC4626Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniverseERC4626WhitelistInterface {
    return new Interface(_abi) as UniverseERC4626WhitelistInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniverseERC4626Whitelist {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniverseERC4626Whitelist;
  }
}
